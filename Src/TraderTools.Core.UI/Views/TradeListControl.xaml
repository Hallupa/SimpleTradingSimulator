<UserControl x:Class="TraderTools.Core.UI.Views.TradeListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="clr-namespace:Hallupa.Library.UI;assembly=Hallupa.Library.UI"
             xmlns:views="clr-namespace:TraderTools.Core.UI.Views"
             xmlns:converters="clr-namespace:Hallupa.Library.UI.Converters;assembly=Hallupa.Library.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <ui:BindingProxy x:Key="Proxy" Data="{Binding}" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVis"/>
            <converters:FlagsToVisibilityConverter x:Key="FlagsToVis"/>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>

        <DataGrid ItemsSource="{Binding Path=Trades, IsAsync=True}" EnableRowVirtualization="true" AutoGenerateColumns="False" GridLinesVisibility="Horizontal"
                  SelectedItem="{Binding SelectedTrade}"
                  CanUserAddRows="False" x:Name="MainDataGrid" ClipboardCopyMode="IncludeHeader">
            <DataGrid.Resources>
                <ui:BindingProxy x:Key="Proxy" Data="{Binding}" />
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu x:Name="MainContextMenu">
                    <MenuItem Header="Edit trade" Command="{Binding EditCommand}" x:Name="MainContextMenuEditMenuItem"/>
                    <MenuItem Header="Delete trade" Command="{Binding DeleteCommand}"
                              CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                              x:Name="MainContextMenuDeleteMenuItem"/>
                    <Separator />
                    <MenuItem Header="Show open trades only" IsCheckable="True" IsChecked="{Binding Data.ShowOpenTradesOnly, Source={StaticResource Proxy}}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Order date" Binding="{Binding OrderDateTimeLocal, StringFormat={}{0:dd-MM-yy HH:mm}, Mode=OneWay}" IsReadOnly="True" Width="100" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.OrderDate}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Order price" Binding="{Binding OrderPrice, StringFormat={}{0:0.0000}, Mode=OneWay}" IsReadOnly="True" Width="75" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.OrderPrice}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Market" Binding="{Binding Market, Mode=OneWay}" IsReadOnly="True" Width="80" />
                <DataGridTextColumn Header="Broker" Binding="{Binding Broker, Mode=OneWay}" FontWeight="Bold" IsReadOnly="True" Width="80" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.Broker}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Direction" Binding="{Binding TradeDirection}" FontWeight="Bold" IsReadOnly="True" Width="65"/>
                <DataGridTextColumn Header="£/pip" Binding="{Binding PricePerPip, StringFormat={}{0:0.00}}" IsReadOnly="True" Width="50" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.PoundsPerPip}, Mode=OneWay}"/>
                <DataGridComboBoxColumn Header="Timeframe" SelectedItemBinding="{Binding Timeframe}" ItemsSource="{Binding Data.TimeFrameItems, Source={StaticResource Proxy}, UpdateSourceTrigger=PropertyChanged}" Width="70"/>
                <DataGridTextColumn Header="Start price" Binding="{Binding StartPrice, StringFormat={}{0:0.0000}, Mode=OneWay}" IsReadOnly="True" Width="68"/>
                <DataGridTextColumn Header="Close price" Binding="{Binding ClosePrice, StringFormat={}{0:0.0000}, Mode=OneWay}" IsReadOnly="True" Width="68" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.ClosePrice}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Quantity" Binding="{Binding EntryQuantity, StringFormat={}{0:0.00000}, Mode=OneWay}" IsReadOnly="True" Width="75" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.Quantity}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Initial Stop" Binding="{Binding InitialStop, StringFormat={}{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="68" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.InitialStop}, Mode=OneWay}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="#18FF0000" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Initial Stop (pips)" Binding="{Binding InitialStopInPips, StringFormat={}{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="100" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.InitialStop}, Mode=OneWay}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="#18FF0000" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Limit" Binding="{Binding InitialLimit, StringFormat={}{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="55" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.InitialLimit}, Mode=OneWay}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="#18008000" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Limit (pips)" Binding="{Binding InitialLimitInPips, StringFormat={}{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="75" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.InitialLimit}, Mode=OneWay}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="#18008000" />
                            <Setter Property="Foreground" Value="Black"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Risking" Binding="{Binding RiskAmount, StringFormat={}£{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="70"/>
                <DataGridTextColumn Header="Risk %" Binding="{Binding RiskPercentOfBalance, StringFormat={}{0:0.00}%, Mode=OneWay}" IsReadOnly="True" Width="55"/>
                <DataGridTextColumn Header="Profit" Binding="{Binding Profit, StringFormat={}£{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="60"/>
                <DataGridTextColumn Header="Result R" Binding="{Binding RMultiple, StringFormat={}{0:0.00}, Mode=OneWay}" IsReadOnly="True" Width="65" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.ResultR}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Status" Binding="{Binding Status, Mode=OneWay}" IsReadOnly="True" Width="65"/>
                <DataGridTextColumn Header="Comments" Binding="{Binding Comments, StringFormat={}{0:0.00}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="180"
                                    Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.Comments}, Mode=OneWay}"/>

                <DataGridTemplateColumn Header="View" Visibility="{Binding Data.TradeListDisplayOptions, Source={StaticResource Proxy}, Converter={StaticResource FlagsToVis}, ConverterParameter={x:Static views:TradeListDisplayOptionsFlag.ViewTrade}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="View" Command="{Binding Data.ViewTradeCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" Margin="1,0,1,0" Padding="20,3,20,3" IsEnabled="{Binding Path=Data.IsViewTradeEnabled, Source={StaticResource Proxy}}"/>
                                <Button Content="View Setup" Command="{Binding Data.ViewTradeSetupCommand, Source={StaticResource Proxy}}" CommandParameter="{Binding}" Margin="1,0,1,0" Padding="20,3,20,3" IsEnabled="{Binding Path=Data.IsViewTradeEnabled, Source={StaticResource Proxy}}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Entry date" Binding="{Binding EntryDateTimeLocal, StringFormat={}{0:dd-MM-yy HH:mm}, Mode=OneWay}" IsReadOnly="True" Width="100"/>
                <DataGridTextColumn Header="Order expiry" Binding="{Binding OrderExpireTimeLocal, StringFormat={}{0:dd-MM-yy HH:mm}, Mode=OneWay}" IsReadOnly="True" Width="100"/>
                <DataGridTextColumn Header="Close date" Binding="{Binding CloseDateTimeLocal, StringFormat={}{0:dd-MM-yy HH:mm}, Mode=OneWay}" IsReadOnly="True" Width="100"/>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
